---
openapi: 3.0.3
servers:
- url: /api
components:
  parameters:
    user:
      description: Selected user's unique ID
      in: path
      name: user
      required: true
      schema:
        type: number
    exercise:
      description: Selected exercise's unique ID
      in: path
      name: exercise
      required: true
      schema:
        type: number
    measurements:
      description: Selected measurement's unique ID
      in: path
      name: measurements
      required: true
      schema:
        type: number
  schemas:
    User:
      properties:
        name:
          description: User's name
          type: string
        email:
          description: User's email
          type: string
        age:
          description: User's age
          type: number
        user_creation_date:
          description: User's creation datetime as a string
          type: string
      required:
      - name
      - email
      - age
      - user_creation_date
      type: object
    Exercise:
      properties:
        name:
          description: Name of the exercise
          type: string
        date:
          description: Datetime of the exercise as a string
          type: string
        user_id:
          description: User id
          type: number
        duration:
          description: Duration of exercise
          type: number
      required:
      - name
      - date
      - user_id
      type: object
    Measurements:
      properties:
        date:
          description: Datetime of the measurement as a string
          type: string
        user_id:
          description: User id
          type: number
        weight:
          description: Weight measurement
          type: number
        calories_in:
          description: Calories eaten
          type: number
        calories_out:
          description: Calories burnt
          type: number
      required:
      - date
      - user_id
      type: object
    Stats:
      properties:
        date:
          description: Datetime when these stats were generated
          type: string
        user_id:
          description: User id
          type: number
        total_exercises:
          description: Total amount of exercises this user has done
          type: number
        daily_exercises:
          description: Average number of exercises per day
          type: number
        daily_calories_in:
          description: Average number of calories eaten per day
          type: number
        daily_calories_out:
          description: Average number of calories burnt per day
          type: number
      required:
      - date
      - user_id
      type: object
info:
  title: FitnessBuddy9000
  version: 0.0.1
  description: |
    API documentation for FitnessBuddy9000. It is used to store all kinds of fitness related data about users.
    E.g. exercises done and daily measurements. Purpose is to help users to keep track of their progression in sports.
  termsOfService: http://nothing/
  contact:
    url: http://nothing/
    email: nothing@nothing.com
    name: FAKE CONTACT
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /users/:
    get:
      description: Get the list of existing users
      responses:
        '200':
          description: Successfully retrieved list of users
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  fitnessbuddy:add-user:
                    encoding: json
                    href: /api/users/
                    method: POST
                    schema:
                      properties:
                        age:
                          description: User's age
                          type: number
                        email:
                          description: User's email
                          type: string
                        name:
                          description: User's name
                          type: string
                        user_creation_date:
                          description: User's creation datetime as a string
                          type: string
                          title: Add user
                    self:
                      href: /api/users/
                users:
                - age: 21.0
                  email: some1@email.com
                  name: name1
                  user_creation_date: '2023-01-01T01:00:00'
                - age: 23.0
                  email: some2@email.com
                  name: name1
                  user_creation_date: '2023-01-01T01:00:00'
        '404':
          description: Not found
    post:
      description: Create a new user
      requestBody:
        description: JSON document that contains basic data for a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: user-1
              email: user-1@email.com
              age: 22
              user_creation_date: "2023-02-11T13:01:56"
      responses:
        '201':
          description: Successfully created a new user
          links:
            GetUserByUserId:
              operationId: Access user
              parameters:
                user: 'User ID'
              description: >
                New user ID can be used to access the the new user. GET, PUT, and DELETE methods can be used for /api/users/{user}/
          content:
            application/vnd.mason+json:
              example:
                "@controls":
                  self:
                    href: /api/users/1/
                  delete:
                    method": DELETE
                    title: delete
                    href: /api/users/1/
                  edit:
                    href: /api/users/1/
                    method: PUT
                    encoding: json
                    title: edit
                    schema:
                      type: object
                      required:
                        name:
                        email:
                        age:
                        user_creation_date:
                      properties:
                        name:
                          description: User's name
                          type: string
                        email:
                          description: User's email
                          type: string
                        age:
                          description: User's age
                          type: number
                        user_creation_date:
                          description: User's creation datetime as a string
                          type: string
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
  /users/{user}/:
    parameters:
        - in: path
          name: user
          schema:
            type: integer
          required: true
          description: User id
    get:
      description: Get information for a single user
      responses:
        '200':
          description: Successfully retrieved user information
          content:
            application/vnd.mason+json:
              example: 
                '@controls':
                  edit:
                    encoding: json
                    href: /api/users/1/
                    method: PUT
                    schema:
                      properties:
                        age:
                          description: User's age
                          type: number
                        email:
                          description: User's email
                          type: string
                        name:
                          description: User's name
                          type: string
                        user_creation_date:
                          description: User's creation datetime as a string
                          type: string
                      required:
                      - name
                      - email
                      - age
                      - user_creation_date
                      type: object
                    title: Edit user
                  fitnessbuddy:delete:
                    href: /api/users/1/
                    method: DELETE
                    title: Delete user
                  fitnessbuddy:exercises-all:
                    href: /api/users/1/exercises/
                    title: All exercises
                  fitnessbuddy:measurements-all:
                    href: /api/users/1/measurements/
                    title: All measurements
                  self:
                    href: /api/users/1/
                user:
                  age: 21.0
                  email: some1@email.com
                  name: name1
                  user_creation_date: '2023-01-01T01:00:00'

        '404':
          description: Not found
    put:
      description: Edit existing user
      requestBody:
        description: JSON document that contains modified user information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: user-3
              email: user-3@email.com
              age: 33
              user_creation_date: "2023-02-11T13:01:56"
      responses:
        '204':
          description: Successfully edited user
          headers:
            Location: 
              description: URI of the edited user
              schema: 
                type: string
          content:
            html:
              example:
                Returns empty response body and headers with a location of the edited item. E.g. /api/users/1/
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
    delete:
      description: Delete existing user
      responses:
        '204':
          description: Successfully deleted user
        '404':
          description: Not found
  /users/{user}/exercises/:
    parameters:
        - in: path
          name: user
          schema:
            type: integer
          required: true
          description: User id
    get:
      description: Get the list of exercises for this user
      responses:
        '200':
          description: Succesfully retrieved list of exercises
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  fitnessbuddy:add-exercise:
                    encoding: json
                    href: /api/users/1/exercises/
                    method: POST
                    schema:
                      properties:
                        date:
                          description: Datetime of the exercise as a string
                          type: string
                        duration:
                          description: Duration of exercise
                          type: number
                        name:
                          description: Name of the exercise
                          type: string
                        user_id:
                          description: User id
                          type: number
                      required:
                      - name
                      - date
                      - user_id
                      type: object
                    title: fitnessbuddy:add-exercise
                  self:
                    href: /api/users/1/exercises/
                exercises:
                - date: '2023-01-10T11:00:00'
                  duration: 100.0
                  id: 1
                  name: laji1
                  user_id: 1
                - date: '2023-01-11T12:00:00'
                  duration: 200.0
                  id: 2
                  name: laji2
                  user_id: 1
        '404':
          description: Not found
    post:
      description: Create a new exercise
      requestBody:
        description: JSON document that contains information about the exercise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
            example:
              example1:
                name: Basketball
                duration: 2656.0
                date: "2023-02-11T13:01:56"
              example2:
                name: Gym session
                date: "2023-02-12T11:01:00"
      responses:
        '201':
          description: Successfully created a new exercise
          links:
            GetUserByUserId:
              operationId: Access exercise
              parameters:
                user: 'User ID'
                exercise: 'Exercise ID'
              description: >
                New exercise ID can be used to access the the new item. GET, PUT, and DELETE methods can be used for /api/users/{user}/exercises/{exercise}/
          content:
            application/vnd.mason+json:
              example:
                "@controls":
                  self:
                    href: /api/users/1/exercises/1/
                  delete:
                    method": DELETE
                    title: delete
                    href: /api/users/1/exercises/1/
                  edit:
                    href: /api/users/1/exercises/1/
                    method: PUT
                    encoding: json
                    title: edit
                    schema:
                      type: object
                      required:
                        name:
                        date:
                        user_id:
                      properties:
                        name:
                          description: Name of the exercise
                          type: string
                        date:
                          description: Datetime of the measurement as a string
                          type: string
                        user_id:
                          description: User id
                          type: number
                        duration:
                          description: Duration of exercise
                          type: number
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
  /users/{user}/exercises/{exercise}/:
    parameters:
        - in: path
          name: user
          schema:
            type: integer
          required: true
          description: User id
        - in: path
          name: exercise
          schema:
            type: integer
          required: true
          description: Exercise id
    get:
      description: Get information for a single exercise
      responses:
        '200':
          description: Successfully retrieved exercise information
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  self:
                    href: /api/users/1/exercises/1/
                exercise:
                  date: '2023-01-10T11:00:00'
                  duration: 100.0
                  id: 1
                  name: laji1
                  user_id: 1

        '400':
          description: User id doesn't match the exercise's user id
          content:
            json:
              example:
                message: Requested exercise does not correspond to requested user.
        '404':
          description: Not found
    put:
      description: Edit existing exercise
      requestBody:
        description: JSON document that contains modified exercise information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
            example:
              name: Football
              duration: 2656.0
              date: "2023-02-11T13:01:56"
              user_id: 1
              id: 1
      responses:
        '204':
          description: Successfully edited exercise
          headers:
            Location: 
              description: URI of the edited user
              schema: 
                type: string
          content:
            html:
              example:
                Returns empty response body and headers with a location of the edited item. E.g. /api/users/1/exercises/1/
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
    delete:
      description: Delete existing exercise
      responses:
        '204':
          description: Successfully deleted exercise
        '404':
          description: Not found
  /users/{user}/measurements/:
    parameters:
        - in: path
          name: user
          schema:
            type: integer
          required: true
          description: User id
    get:
      description: Get the list of measurements for this user
      responses:
        '200':
          description: Succesfully retrieved list of measurements
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  fitnessbuddy:add-measurement:
                    encoding: json
                    href: /api/users/3/measurements/
                    method: POST
                    schema:
                      properties:
                        calories_in:
                          description: Calories eaten
                          type: number
                        calories_out:
                          description: Calories burnt
                          type: number
                        date:
                          description: Datetime of the measurement as a string
                          type: string
                        user_id:
                          description: User id
                          type: number
                        weight:
                          description: Weight measurement
                          type: number
                      required:
                      - date
                      - user_id
                      type: object
                    title: fitnessbuddy:addmeasurement
                  self:
                    href: /api/users/3/measurements/
                measurements:
                - calories_in: 1000.0
                  calories_out: 100.0
                  date: '2023-01-01T01:00:00'
                  id: 1
                  user_id: 3
                  weight: 10.1
                - calories_in: 1100.0
                  calories_out: 200.0
                  date: '2023-01-02T01:00:00'
                  id: 2
                  user_id: 3
                  weight: 20.2
        '404':
          description: Not found
    post:
      description: Create a new measurements item
      requestBody:
        description: JSON document that contains information about the measuremnts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurements'
            example:
              example1:
                date: "2023-02-11T13:01:56"
                weight: 66.0
                calories_in: 2659.0
                calories_out: 2664.0
              example2:
                date: "2023-02-11T13:01:56"
                weight: 70.0
              example3:
                date: "2023-02-11T13:01:56"
                calories_in: 2559.0
                calories_out: 2444.0
      responses:
        '201':
          description: Successfully created a new measurements item
          links:
            GetUserByUserId:
              operationId: Get measurements
              parameters:
                user: 'User ID'
                measurements: 'Measurements ID'
              description: >
                New measurement ID can be used to access the the new item. GET, PUT, and DELETE methods can be used for /api/users/{user}/measurements/{measurements}/
          content:
            application/vnd.mason+json:
              example:
                "@controls":
                  self:
                    href: /api/users/1/measurements/1/
                  delete:
                    method": DELETE
                    title: delete
                    href: /api/users/1/measurements/1/
                  edit:
                    href: /api/users/1/measurements/1/
                    method: PUT
                    encoding: json
                    title: edit
                    schema:
                      type: object
                      required:
                        date:
                        user_id:
                      properties:
                        date:
                          description: Datetime of the measurement as a string
                          type: string
                        user_id:
                          description: User id
                          type: number
                        weight:
                          description: Weight measurement
                          type: number
                        calories_in:
                          description: Calories eaten
                          type: number
                        calories_out:
                          description: Calories burnt
                          type: number
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
  /users/{user}/measurements/{measurements}/:
    parameters:
        - in: path
          name: user
          schema:
            type: integer
          required: true
          description: User id
        - in: path
          name: measurements
          schema:
            type: integer
          required: true
          description: Measurements item id
    get:
      description: Get information for a single measurements
      responses:
        '200':
          description: Successfully retrieved measurements information
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  self:
                    href: /api/users/3/measurements/1/
                measurement:
                  calories_in: 1000.0
                  calories_out: 100.0
                  date: '2023-01-01T01:00:00'
                  id: 1
                  user_id: 3
                  weight: 10.1
        '400':
          description: User id doesn't match the measurements's user id
          content:
            json:
              example:
                message: Requested measurement does not correspond to requested user.
        '404':
          description: Not found
    put:
      description: Edit existing measurements
      requestBody:
        description: JSON document that contains modified measurements information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurements'
            example:
              date: "2023-02-11T13:01:56"
              weight: 56.0
              calories_in: 3000.0
              calories_out: 3000.0
              user_id: 1
              id: 1
      responses:
        '204':
          description: Successfully edited measurements
          headers:
            Location: 
              description: URI of the edited measurements
              schema: 
                type: string
          content:
            html:
              example:
                Returns empty response body and headers with a location of the edited item. E.g. /api/users/1/measurements/1/
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
    delete:
      description: Delete existing measurements
      responses:
        '204':
          description: Successfully deleted measurements
        '404':
          description: Not found
  /users/{user}/stats/:
    parameters:
        - in: path
          name: user
          schema:
            type: integer
          required: true
          description: User id
    get:
      description: Get user statistics
      responses:
        '202':
          description: Successfully send new task to queue for generating new stats
        '404':
          description: Not found
    post:
      description: Add new statistics
      requestBody:
        description: JSON document that contains statistics information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stats'
            example:
              date: "2023-02-11T13:01:56"
              user_id: 1
              total_exercises: 56.0
              daily_exercises: 0.92
              daily_calories_in: 2523.0
              daily_calories_out: 2553.0
      responses:
        '201':
          description: Successfully added new statistics
          content:
            application/vnd.mason+json:
              example:
                "@controls":
                  self:
                    href: /api/users/1/stats/
        '400':
          description: Invalid request body
          content:
            json:
              example:
                message: The browser (or proxy) sent a request that this server could not understand.
        '415':
          description: Request body isn't JSON
          content:
            json:
              example:
                message: The server does not support the media type transmitted in the request.
        '404':
          description: Not found
